<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Tasks - Todo App</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: #f5f7fa;
        min-height: 100vh;
      }

      .header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      .header-content {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .header h1 {
        font-size: 24px;
      }

      .user-info {
        display: flex;
        align-items: center;
        gap: 20px;
      }

      .username {
        font-size: 16px;
      }

      .logout-btn {
        background: rgba(255, 255, 255, 0.2);
        border: 2px solid white;
        color: white;
        padding: 8px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.3s;
      }

      .logout-btn:hover {
        background: white;
        color: #667eea;
      }

      .container {
        max-width: 1200px;
        margin: 30px auto;
        padding: 0 20px;
      }

      .create-task-section {
        background: white;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 30px;
      }

      .create-task-section h2 {
        margin-bottom: 20px;
        color: #333;
        font-size: 20px;
      }

      .task-form {
        display: flex;
        flex-direction: column;
        gap: 15px;
      }

      .form-group {
        display: flex;
        flex-direction: column;
      }

      label {
        margin-bottom: 5px;
        color: #555;
        font-weight: 500;
        font-size: 14px;
      }

      input[type="text"],
      textarea {
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 5px;
        font-size: 14px;
        font-family: inherit;
        transition: border-color 0.3s;
      }

      input[type="text"]:focus,
      textarea:focus {
        outline: none;
        border-color: #667eea;
      }

      textarea {
        resize: vertical;
        min-height: 80px;
      }

      .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 5px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.2s;
        align-self: flex-start;
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
      }

      .filter-section {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
        flex-wrap: wrap;
      }

      .filter-btn {
        padding: 10px 20px;
        border: 2px solid #667eea;
        background: white;
        color: #667eea;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.3s;
      }

      .filter-btn.active {
        background: #667eea;
        color: white;
      }

      .filter-btn:hover {
        background: #667eea;
        color: white;
      }

      .tasks-section {
        background: white;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      }

      .tasks-section h2 {
        margin-bottom: 20px;
        color: #333;
        font-size: 20px;
      }

      .task-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
      }

      .task-item {
        background: #f9f9f9;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        padding: 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        transition: all 0.3s;
      }

      .task-item:hover {
        border-color: #667eea;
        box-shadow: 0 3px 10px rgba(102, 126, 234, 0.1);
      }

      .task-item.completed {
        opacity: 0.7;
        background: #f0f0f0;
      }

      .task-content {
        flex: 1;
      }

      .task-title {
        font-size: 16px;
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
      }

      .task-item.completed .task-title {
        text-decoration: line-through;
        color: #999;
      }

      .task-description {
        font-size: 14px;
        color: #666;
      }

      .task-meta {
        font-size: 12px;
        color: #999;
        margin-top: 8px;
      }

      .task-actions {
        display: flex;
        gap: 10px;
      }

      .btn-action {
        padding: 8px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 600;
        transition: all 0.2s;
      }

      .btn-complete {
        background: #27ae60;
        color: white;
      }

      .btn-complete:hover {
        background: #229954;
      }

      .btn-delete {
        background: #e74c3c;
        color: white;
      }

      .btn-delete:hover {
        background: #c0392b;
      }

      .btn-undo {
        background: #f39c12;
        color: white;
      }

      .btn-undo:hover {
        background: #e67e22;
      }

      .empty-state {
        text-align: center;
        padding: 40px;
        color: #999;
      }

      .empty-state-icon {
        font-size: 48px;
        margin-bottom: 15px;
      }

      .stats {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
        flex-wrap: wrap;
      }

      .stat-card {
        flex: 1;
        min-width: 150px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
      }

      .stat-number {
        font-size: 32px;
        font-weight: 700;
        margin-bottom: 5px;
      }

      .stat-label {
        font-size: 14px;
        opacity: 0.9;
      }

      @media (max-width: 768px) {
        .task-item {
          flex-direction: column;
          align-items: flex-start;
          gap: 15px;
        }

        .task-actions {
          width: 100%;
          justify-content: flex-end;
        }
      }
    </style>
  </head>
  <body>
    <header class="header">
      <div class="header-content">
        <h1>üìù My Todo List</h1>
        <div class="user-info">
          <span class="username">üë§ <%= username %></span>
          <form action="/auth/logout" method="POST" style="margin: 0">
            <button type="submit" class="logout-btn">Logout</button>
          </form>
        </div>
      </div>
    </header>

    <div class="container">
      <!-- Statistics -->
      <div class="stats">
        <div class="stat-card">
          <div class="stat-number"><%= stats.total %></div>
          <div class="stat-label">Total Tasks</div>
        </div>
        <div class="stat-card">
          <div class="stat-number"><%= stats.pending %></div>
          <div class="stat-label">Pending</div>
        </div>
        <div class="stat-card">
          <div class="stat-number"><%= stats.completed %></div>
          <div class="stat-label">Completed</div>
        </div>
      </div>

      <!-- Create Task Section -->
      <div class="create-task-section">
        <h2>Create New Task</h2>
        <form action="/tasks/create" method="POST" class="task-form">
          <div class="form-group">
            <label for="title">Task Title *</label>
            <input
              type="text"
              id="title"
              name="title"
              placeholder="What needs to be done?"
              required
            />
          </div>
          <div class="form-group">
            <label for="description">Description (Optional)</label>
            <textarea
              id="description"
              name="description"
              placeholder="Add more details about this task..."
            ></textarea>
          </div>
          <button type="submit" class="btn-primary">+ Add Task</button>
        </form>
      </div>

      <!-- Filter Section -->
      <div class="filter-section">
        <button
          class="filter-btn <%= filter === 'all' ? 'active' : '' %>"
          onclick="window.location.href='/tasks?filter=all'"
        >
          All Tasks
        </button>
        <button
          class="filter-btn <%= filter === 'pending' ? 'active' : '' %>"
          onclick="window.location.href='/tasks?filter=pending'"
        >
          Pending
        </button>
        <button
          class="filter-btn <%= filter === 'completed' ? 'active' : '' %>"
          onclick="window.location.href='/tasks?filter=completed'"
        >
          Completed
        </button>
      </div>

      <!-- Tasks Section -->
      <div class="tasks-section">
        <h2>
          <% if (filter === 'pending') { %> Pending Tasks <% } else if (filter
          === 'completed') { %> Completed Tasks <% } else { %> All Tasks <% } %>
        </h2>

        <div class="task-list">
          <% if (tasks.length === 0) { %>
          <div class="empty-state">
            <div class="empty-state-icon">üì≠</div>
            <p>No tasks found. Create your first task above!</p>
          </div>
          <% } else { %> <% tasks.forEach(task => { %>
          <div
            class="task-item <%= task.status === 'completed' ? 'completed' : '' %>"
          >
            <div class="task-content">
              <div class="task-title"><%= task.title %></div>
              <% if (task.description) { %>
              <div class="task-description"><%= task.description %></div>
              <% } %>
              <div class="task-meta">
                Created: <%= new Date(task.createdAt).toLocaleDateString() %> <%
                if (task.completedAt) { %> | Completed: <%= new
                Date(task.completedAt).toLocaleDateString() %> <% } %>
              </div>
            </div>
            <div class="task-actions">
              <% if (task.status === 'pending') { %>
              <form
                action="/tasks/<%= task._id %>/complete"
                method="POST"
                style="display: inline"
              >
                <button type="submit" class="btn-action btn-complete">
                  ‚úì Complete
                </button>
              </form>
              <% } else if (task.status === 'completed') { %>
              <form
                action="/tasks/<%= task._id %>/undo"
                method="POST"
                style="display: inline"
              >
                <button type="submit" class="btn-action btn-undo">
                  ‚Ü∫ Undo
                </button>
              </form>
              <% } %>
              <form
                action="/tasks/<%= task._id %>/delete"
                method="POST"
                style="display: inline"
              >
                <button
                  type="submit"
                  class="btn-action btn-delete"
                  onclick="return confirm('Are you sure you want to delete this task?')"
                >
                  üóë Delete
                </button>
              </form>
            </div>
          </div>
          <% }); %> <% } %>
        </div>
      </div>
    </div>

    <script>
      // Auto-hide success/error messages after 3 seconds
      setTimeout(() => {
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has("success") || urlParams.has("error")) {
          const newUrl = window.location.pathname;
          window.history.replaceState({}, document.title, newUrl);
        }
      }, 3000);
    </script>
  </body>
</html>
